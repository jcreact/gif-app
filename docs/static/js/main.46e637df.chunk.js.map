{"version":3,"sources":["components/AddCategory.jsx","components/GifGridItem.jsx","components/Spinner.jsx","helpers/getGifs.js","components/GifGrid.jsx","hooks/useFetchGifs.js","GifApp.js","index.js"],"names":["AddCategory","setCategories","useState","category","setCategory","onSubmit","e","preventDefault","trim","cats","className","type","value","onChange","target","GifGridItem","url","title","username","src","alt","Spinner","style","width","height","role","getGifs","a","encodeURI","fetch","resp","json","data","gifs","map","img","id","images","downsized","GifGrid","loading","state","setState","useEffect","then","useFetchGifs","GifApp","categories","cat","ReactDOM","render","document","getElementById"],"mappings":"6LAGaA,EAAc,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAC1B,EAAgCC,mBAAS,IAAzC,mBAAOC,EAAP,KAAiBC,EAAjB,KAcA,OACI,mCACI,sBAAMC,SAVO,SAACC,GAClBA,EAAEC,iBACEJ,GAAYA,EAASK,SACrBP,GAAc,SAACQ,GAAD,OAAWN,GAAX,mBAAwBM,OACtCL,EAAY,MAMkBM,UAAU,OAAxC,SACI,uBACIA,UAAU,eACVC,KAAK,OACLC,MAAOT,EACPU,SAnBK,SAACP,GAClBF,EAAYE,EAAEQ,OAAOF,e,QCLhBG,EAAc,SAAC,GAA8B,IAA5BC,EAA2B,EAA3BA,IAAKC,EAAsB,EAAtBA,MAAOC,EAAe,EAAfA,SACtC,OACI,yBAASR,UAAU,wCAAnB,SACI,sBAAKA,UAAU,aAAf,UACI,qBAAKS,IAAKH,EAAKI,IAAKH,EAAOP,UAAU,sBACrC,yBAASA,UAAU,YAAnB,SACI,4BAAIO,MAER,yBAASP,UAAU,cAAnB,SACI,wBAAOA,UAAU,aAAjB,oBAAsCQ,aCT7CG,EAAU,WACnB,OACI,qBAAKX,UAAU,4EAAf,SACI,qBACIA,UAAU,8BACVY,MAAO,CAAEC,MAAO,OAAQC,OAAQ,QAChCC,KAAK,SAHT,SAKI,sBAAMf,UAAU,iB,uBCVnBgB,EAAO,uCAAG,WAAOvB,GAAP,uBAAAwB,EAAA,4DACJ,mCACTX,EAFa,iDAEmCY,UAAUzB,GAF7C,6BACJ,oCADI,SAGA0B,MAAMb,GAHN,cAGbc,EAHa,gBAIIA,EAAKC,OAJT,uBAIXC,EAJW,EAIXA,KAEFC,EAAOD,EAAKE,KAAI,SAACC,GAAS,IAAD,EAC3B,MAAO,CACHC,GAAID,EAAIC,GACRnB,MAAOkB,EAAIlB,MACXD,IAAG,UAAEmB,EAAIE,cAAN,aAAE,EAAYC,UAAUtB,IAC3BE,UAAa,OAAHiB,QAAG,IAAHA,OAAA,EAAAA,EAAKjB,WAAY,kBAXhB,kBAcZe,GAdY,4CAAH,sDCUPM,EAAU,SAAC,GAAkB,IAAhBpC,EAAe,EAAfA,SACtB,ECPwB,SAACA,GAEzB,MAA0BD,mBAAS,CAC/B8B,KAAM,GACNQ,SAAS,IAFb,mBAAOC,EAAP,KAAcC,EAAd,KAgBA,OAXAC,qBAAU,kBACNjB,EAAQvB,GACHyC,MAAK,SAAAX,GAAI,OACNS,EAAS,CACLV,KAAMC,EACNO,SAAS,SAGnB,CAACrC,IAGAsC,EDX2BI,CAAa1C,GAAjCkC,EAAd,EAAQL,KAAcQ,EAAtB,EAAsBA,QAKtB,OACI,qCACI,oBAAI9B,UAAU,oCAAd,SAAmDP,IAClDqC,GAAW,cAAC,EAAD,IACZ,qBAAK9B,UAAU,sCAAf,SANJ2B,EAAOH,KAAI,SAACC,GAAD,OAAS,cAAC,EAAD,eAA8BA,GAAZA,EAAIC,aETrCU,EAAS,WAElB,MAAoC5C,mBAAS,CAAC,gBAA9C,mBAAO6C,EAAP,KAAmB9C,EAAnB,KAEA,OACI,qCACI,oBAAIS,UAAU,OAAd,qBACA,cAAC,EAAD,CAAaT,cAAeA,IAC5B,uBAEI8C,EAAWb,KAAI,SAAAc,GAAG,OAAI,cAAC,EAAD,CAAmB7C,SAAU6C,GAAfA,UCRpDC,IAASC,OACL,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.46e637df.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\n\nexport const AddCategory = ({ setCategories }) => {\n    const [category, setCategory] = useState('');\n\n    const handleChange = (e) => {\n        setCategory(e.target.value);\n    };\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        if (category && category.trim()) {\n            setCategories((cats) => [category, ...cats]);\n            setCategory('');\n        }\n    };\n\n    return (\n        <>\n            <form onSubmit={handleSubmit} className=\"mt-3\">\n                <input\n                    className=\"form-control\"\n                    type=\"text\"\n                    value={category}\n                    onChange={handleChange}\n                />\n            </form>\n        </>\n    );\n};\n\nAddCategory.propTypes = {\n    setCategories: PropTypes.func.isRequired,\n};\n","import React from 'react';\n\nexport const GifGridItem = ({ url, title, username }) => {\n    return (\n        <article className=\"col animate__animated animate__fadeIn\">\n            <div className=\"card h-100\">\n                <img src={url} alt={title} className=\"card-card-img-top\" />\n                <section className=\"card-body\">\n                    <p>{title}</p>\n                </section>\n                <section className=\"card-footer\">\n                    <small className=\"text-muted\">Autor: {username}</small>\n                </section>\n            </div>\n        </article>\n    );\n};\n","import React from 'react';\n\nexport const Spinner = () => {\n    return (\n        <div className=\"d-flex justify-content-center mt-3 mb-3 animate__animated animate__fadeIn\">\n            <div\n                className=\"spinner-border text-primary\"\n                style={{ width: '4rem', height: '4rem' }}\n                role=\"status\"\n            >\n                <span className=\"sr-only\" />\n            </div>\n        </div>\n    );\n};\n","export const getGifs = async (category) => {\n    const apiKey = 'DLJNUu7JpsE2JItElblNcv9SGN4pD4v9';\n    const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(category)}&limit=10&api_key=${apiKey}`;\n    const resp = await fetch(url);\n    const { data } = await resp.json();\n\n    const gifs = data.map((img) => {\n        return {\n            id: img.id,\n            title: img.title,\n            url: img.images?.downsized.url,\n            username: img?.username || 'Desconocido',\n        };\n    });\n    return gifs;\n};","import React from 'react';\nimport PropTypes from 'prop-types';\n\n// Componentes\nimport { GifGridItem } from './GifGridItem.jsx';\nimport { Spinner } from './Spinner.jsx';\n\n// Custom Hooks\nimport { useFetchGifs } from '../hooks/useFetchGifs';\n\nexport const GifGrid = ({ category }) => {\n    const { data: images, loading } = useFetchGifs(category);\n\n    const showImages = () =>\n        images.map((img) => <GifGridItem key={img.id} {...img} />);\n\n    return (\n        <>\n            <h3 className=\"animate__animated animate__fadeIn\">{category}</h3>\n            {loading && <Spinner />}\n            <div className=\"row row-cols-sm-2 row-cols-lg-4 g-4\">\n                {showImages()}\n            </div>\n        </>\n    );\n};\n\nGifGrid.propTypes = {\n    category: PropTypes.string.isRequired,\n};\n","import { useEffect, useState } from 'react';\n\nimport { getGifs } from '../helpers/getGifs';\n\nexport const useFetchGifs = (category) => {\n\n    const [state, setState] = useState({\n        data: [],\n        loading: true\n    });\n\n    useEffect(() =>\n        getGifs(category)\n            .then(gifs =>\n                setState({\n                    data: gifs,\n                    loading: false\n                })\n            )\n        , [category]\n    );\n\n    return state;\n};","import React, { useState } from 'react';\n\nimport { AddCategory } from './components/AddCategory.jsx';\nimport { GifGrid } from './components/GifGrid.jsx';\n\nexport const GifApp = () => {\n\n    const [categories, setCategories] = useState(['Dragon Ball']);\n\n    return (\n        <>\n            <h2 className=\"mt-3\">Gif App</h2>\n            <AddCategory setCategories={setCategories} />\n            <hr />\n            {\n                categories.map(cat => <GifGrid key={cat} category={cat} />)\n            }\n        </>\n    );\n};","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n\nimport { GifApp } from './GifApp';\n\n\nReactDOM.render(\n    <GifApp />,\n    document.getElementById('root')\n);\n"],"sourceRoot":""}